package org.git.client.swing;import java.awt.Frame;import java.awt.Toolkit;import java.lang.reflect.Constructor;import java.net.URL;import java.io.*;import javax.swing.JFrame;/** * Demonstrates how to displays a splash window during startup of an application. * Adapt this class to your liking but keep it small. * * @author Werner Randelshofer, Staldenmattweg 2, Immensee, CH-6405, Switzerland. * @version 1.2  2003-06-01 Revised. */public class GITStartup extends Object {    public static void main(String[] args) {        // NOTE: The splash window should appear as early as possible.        //       The code provided here uses Reflection to avoid time        //       consuming class loading before the splash window is        //       constructed.        // Read the image data and open the splash screen        // ----------------------------------------------        // TO DO: Replace 'splash.gif' with the file name of your splash image.        SplashWindow w = null;        JFrame splashFrame = new JFrame();        URL imageURL = GITStartup.class.getResource("/images/splash.jpg");        if (imageURL != null) {                        w = new SplashWindow(splashFrame,                Toolkit.getDefaultToolkit().createImage(imageURL)            );            w.toFront();            w.show();        } else {            System.err.println("Splash image not found");        }        // NOTE: If you run this application using java -verbose        //       you should not see any of your application classes        //       being loaded by the JVM until this point (except        //       for this class and the SplashWindow class).        //System.out.println("Splash screen displayed");                // Call the main method of the application using Reflection.        // ---------------------------------------------------------        // TO DO: Replace 'MyApp' with the fully qualified class        // name of your application.        try {            Constructor constructor = Class.forName("org.git.client.swing.GetItTogether").getConstructor(new Class[] {SplashWindow.class});            constructor.newInstance(new SplashWindow[] {w});//            .getMethod("main", new Class[] {String[].class})//            .invoke(null, new Object[] {args});        } catch (Throwable e) {            e.printStackTrace();            System.err.flush();            System.exit(10);        }        // Dispose the splash window by disposing its parent frame        // -------------------------------------------------------        if (splashFrame != null) {            try {                Thread.sleep(5000);            } catch (InterruptedException e1) {                // TODO Auto-generated catch block                e1.printStackTrace();            }            w.dispose();        }    }}